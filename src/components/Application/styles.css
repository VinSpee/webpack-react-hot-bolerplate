@import "sanitize.css";
@import "shed-css/lib/index.css";

:root {
  --augmented-fourth : 1.414;
  --double-octave    : 4;
  --fifth            : 1.5;
  --fourth           : 1.333;
  --golden           : 1.618;
  --major-eleventh   : 2.667;
  --major-second     : 1.125;
  --major-seventh    : 1.875;
  --major-sixth      : 1.667;
  --major-tenth      : 2.5;
  --major-third      : 1.25;
  --major-twelfth    : 3;
  --minor-second     : 1.067;
  --minor-seventh    : 1.778;
  --minor-sixth      : 1.6;
  --minor-third      : 1.2;
  --octave           : 2;
  --phi              : 1.618;

  --ms-10 : calc(var(--ms-9) / var(--ms-ratio));
  --ms-9  : calc(var(--ms-8) / var(--ms-ratio));
  --ms-8  : calc(var(--ms-7) / var(--ms-ratio));
  --ms-7  : calc(var(--ms-6) / var(--ms-ratio));
  --ms-6  : calc(var(--ms-5) / var(--ms-ratio));
  --ms-5  : calc(var(--ms-4) / var(--ms-ratio));
  --ms-4  : calc(var(--ms-3) / var(--ms-ratio));
  --ms-3  : calc(var(--ms-2) / var(--ms-ratio));
  --ms-2  : calc(var(--ms-1) / var(--ms-ratio));
  --ms-1  : calc(var(--ms0) / var(--ms-ratio));
  --ms0   : var(--ms-base);
  --ms1   : calc(var(--ms-ratio) * var(--ms0));
  --ms2   : calc(var(--ms-ratio) * var(--ms1));
  --ms3   : calc(var(--ms-ratio) * var(--ms2));
  --ms4   : calc(var(--ms-ratio) * var(--ms3));
  --ms5   : calc(var(--ms-ratio) * var(--ms4));
  --ms6   : calc(var(--ms-ratio) * var(--ms5));
  --ms7   : calc(var(--ms-ratio) * var(--ms6));
  --ms8   : calc(var(--ms-ratio) * var(--ms7));
  --ms9   : calc(var(--ms-ratio) * var(--ms8));
  --ms10  : calc(var(--ms-ratio) * var(--ms9));
  --ms11  : calc(var(--ms-ratio) * var(--ms10));
  --ms12  : calc(var(--ms-ratio) * var(--ms11));
  --ms13  : calc(var(--ms-ratio) * var(--ms12));
  --ms14  : calc(var(--ms-ratio) * var(--ms13));
  --ms15  : calc(var(--ms-ratio) * var(--ms14));
  --ms16  : calc(var(--ms-ratio) * var(--ms15));
  --ms17  : calc(var(--ms-ratio) * var(--ms16));
  --ms18  : calc(var(--ms-ratio) * var(--ms17));
  --ms19  : calc(var(--ms-ratio) * var(--ms18));
  --ms20  : calc(var(--ms-ratio) * var(--ms19));
  --ms21  : calc(var(--ms-ratio) * var(--ms20));

  --ms-ratio: var(--golden);
  --ms-base: 1rem;
  --ms-ratio: var(--minor-third);
  --mqs: n, xs, sm ,md, lg, xl;
  --f-f-sans: Helvetica Neue Custom, Helvetica Neue, Helvetica, sans-serif;
  --f-f-serif: serif;
  --f-f-mono: monospace;
  --f-w-min: 100;
  --f-w-max: 900;
  --l-h--default: 1;
  --l-h--tight: 1.2;
  --l-h--normal: 1.5;
  --l-h--loose: 1.2;
  --l-s--default: normal;
  --l-s--tight: -.03em;
  --l-s--normal: -.01em;
  --l-s--loose: .32em;
  --z-dot9: var(--ms-1);
  --z-dot8: var(--ms-2);
  --z-dot7: var(--ms-3);
  --z-dot6: var(--ms-4);
  --z-dot5: var(--ms-5);
  --z-dot4: var(--ms-6);
  --z-dot3: var(--ms-7);
  --z-dot2: var(--ms-8);
  --z-dot1: var(--ms-9);
  --z0: 0;
  --z1: var(--ms0);
  --z2: var(--ms1);
  --z3: var(--ms2);
  --z4: var(--ms3);
  --z5: var(--ms4);
  --z6: var(--ms5);
  --z7: var(--ms6);
  --z8: var(--ms7);
  --z9: var(--ms8);
  --z10: var(--ms9);
  --black: #111111;
  --gray-dd: #333333;
  --gray-d: #666666;
  --gray: #999999;
  --gray-l: #CCCCCC;
  --gray-ll: #F3F3F3;
  --white: #FFFFFF;
  --red: #E62B1E;
  --blue: #4592E5;
  --colors: black, gray-dd, gray-d, gray, gray-l, gray-ll, white, red, blue;
}

@custom-media --mq-xs (min-width: 500px);
@custom-media --mq-sm (min-width: 700px);
@custom-media --mq-md (min-width: 900px);
@custom-media --mq-lg (min-width: 1100px);
@custom-media --mq-xl (min-width: 1300px);
@custom-media --mq-xxl (min-width: 1700px);

html {
  line-height: var(--l-h--normal);
  font-family: var(--f-f-sans);
}

@each $mq in n, xs, sm, md, lg, xl, xxl {
  @if $mq == n {
    @each $color in var(--colors) {
      .c\:$color {
        color: var(--$color);
      }

      .bg\:$color {
        background-color: var(--$color);
      }

      .hover\/c\:$color:hover {
        color: var(--$color);
      }

      .hover\/bg\:$color:hover {
        background-color: var(--$color);
      }

      @for $i from 1 to 9 {
        .bg\:$color\.$i {
          background-color: color(var(--$color) alpha(calc($i / 10)));
        }

        .c\:$color\.$i {
          color: color(var(--$color) alpha(calc($i / 10)));
        }

        .hover\/bg\:$color\.$i:hover {
          background-color: color(var(--$color) alpha(calc($i / 10)));
        }

        .hover\/c\:$color\.$i:hover {
          color: color(var(--$color) alpha(calc($i / 10)));
        }
      }
    }
  }
  @else {
    @media(--mq-$mq) {
      @each $color in var(--colors) {
        .c\:$color\@$mq {
          color: var(--$color);
        }

        .bg\:$color\@$mq {
          background-color: var(--$color);
        }

        .hover\/c\:$color\@$mq:hover {
          color: var(--$color);
        }

        .hover\/bg\:$color\@$mq:hover {
          background-color: var(--$color);
        }

        @for $i from 1 to 9 {
          .bg\:$color\.$i\@$mq {
            background-color: color(var(--$color) alpha(calc($i / 10)));
          }

          .c\:$color\.$i\@$mq {
            color: color(var(--$color) alpha(calc($i / 10)));
          }

          .hover\/bg\:$color\.$i\@$mq:hover {
            background-color: color(var(--$color) alpha(calc($i / 10)));
          }

          .hover\/c\:$color\.$i\@$mq:hover {
            color: color(var(--$color) alpha(calc($i / 10)));
          }
        }
      }
    }
  }
}
